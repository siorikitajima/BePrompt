<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width">
  <title>Be: / Prompt</title>
  <link rel="stylesheet" href="css/style.css">
</head>
<body>

  <!-- //////// DEFAULT Screen /////// -->

  <div id="screen">
    <!-- /// NAV+CTA /// -->
    <div class="headnav">
      <div id="language">
        <img src="images/language@2x.png" alt="">
        <p class="lang">English</p>
      </div>
      <div id="mainBtn">
        <button id="editBtn">
          <img src="images/custom@2x.png">
          <p>EDIT</p>
        </button>
      </div>
    </div>
    <!-- /// PROMPT /// -->
    <div class="currentprompt">
      <div class="current">
        <p class="label">Current prompt</p>
        <p id="prompt"></p>
      </div>
    </div>
    <!-- /// CREDIT /// -->
    <div id="credits">
      <p class="label">Style/Artist</p>
      <div id="styleArt">
        <div id="artists">
        </div>
      </div>
      <p class="label">Music</p>
      <div id="musiccred">
      </div>
    </div>
  </div>

  <!-- //////// EDIT Screen /////// -->
  <div id="edit">
    <!-- /// NAV+CTA /// -->
    <div class="headnav">
      <div id="close">
        <img src="images/close.svg" alt="Close">
      </div>
      <div id="mainBtn">
        <button id="sendBtn" class="disabled">
          <img src="images/send@2x.png">
          <p>SEND</p>
        </button>
      </div>
    </div>
    <!-- /// PROMPT /// -->
    <div class="currentprompt">
      <div class="current">
        <p class="label">Prompt</p>
        <div class="buttons">
          <button id="randomBtn">
            <img src="images/dice@2x.png">
            <p>Randome Preset</p>
          </button>
          <button class="square" id="Life">
            <img src="images/life2@2x.png">
          </button>
          <button class="square" id="System">
            <img src="images/system2@2x.png">
          </button>
          <button class="square" id="MonsterParty">
            <img src="images/monster2@2x.png">
          </button>
        </div>
        <textarea type="text" id="promptInput"></textarea>
      </div>
    </div>
    <!-- /// STYLE+ARTIST /// -->
    <div id="styles">
      <p class="label">Style/Artist</p>
      <div class="buttons">
        <button id="selectBtn">
          <img src="images/custom2@2x.png">
          <p>Edit Style/Artist</p>
        </button>
      </div>
      <div id="styleArt">
        <div id="artistsEdit">
        </div>
      </div>
    </div>
  </div>

  <!-- //////// STYLE ART Select Screen /////// -->
  <div id="selection">
    <div class="headnav">
      <div id="closeSelect">
        <img src="images/close.svg" alt="Close">
      </div>
      <div id="mainBtn">
        <button id="applyBtn">
          <img src="images/check@2x.png">
          <p>APPLY</p>
        </button>
      </div>
    </div>
    <div id="styleArtList">
      <div id="artlist">
        <p class="label artstylelist">Artists</p>
      </div>
      <div id="stylelist">
        <p class="label artstylelist">Styles/Materials</p>
      </div>
    </div> 
  </div>

    <script>
      const promptData = <%- JSON.stringify(promptData) %> ;
      const artistData = <%- JSON.stringify(artistData) %> ;
      const styleData = <%- JSON.stringify(styleData) %> ;
      const musicData = <%- JSON.stringify(musicData) %> ;
      const current = document.getElementById('screen');
      const edit = document.getElementById('edit');
      const selection = document.getElementById('selection');
      const categories = document.querySelectorAll('.square');
      let theCate = '';
      let theprompt = '';
      let theArtists = [], theMusic = [];

      edit.style.display = 'none';
      selection.style.display = 'none';
      
      // Randomly select a prompt from all the prompts
      document.getElementById('randomBtn').addEventListener('click', e => {
        const randomPrompt = promptData[Math.floor(Math.random() * promptData.length)];
        document.getElementById('promptInput').value = randomPrompt.Prompt;
        updateArt(randomPrompt, 'artistsEdit');
        updateArtSection('artistsEdit');
        updateMusicEdit(randomPrompt);
        theprompt = randomPrompt.Prompt;
        theCate = randomPrompt.Category;
        enableSendBtn();
      });

      // Randomly select a prompt from the selected category
      categories.forEach(cate => {
        cate.addEventListener('click', e => {
          const cateName = e.target.id;
          theCate = cateName;
          let promptArray = [];
          promptData.filter(data => {
            if(data.Category === cateName) {
              promptArray.push(data);
            }
          })
          const randomPrompt = promptArray[Math.floor(Math.random() * promptArray.length)];
          document.getElementById('promptInput').value = randomPrompt.Prompt;
          
          updateArt(randomPrompt, 'artistsEdit');
          updateArtSection('artistsEdit');
          updateMusicEdit(randomPrompt);
          theprompt = randomPrompt.Prompt;
          theCate = randomPrompt.Category;
          enableSendBtn();
        });
      });

      const webSocket = new WebSocket('wss://int.patternbased.com/ws');
      webSocket.onmessage = (event) => {
        console.log(event)
        if(isJson(event.data)) { // If its JSON, parse it
          const msg = JSON.parse(event.data);
          if (msg.Prompt && msg.Type == "Be") { // If it is a prompt and 'Be' type, display it
            document.getElementById('prompt').innerHTML = 
            msg.Prompt;
            updateArt(msg, 'artists');
            updateArtSection('artists');
            updateMusicEdit(msg);
            updateMusicSection('musiccred');
            theprompt = msg.Prompt;
            theCate = msg.Category;
          } else { // If it doesn't have a prompt, or any other type, do nothing
            console.log("No prompt");
          }
        } else { // If its not JSON, do nothing
          console.log("Not JSON");
        }
      };

      webSocket.addEventListener("open", () => {
        console.log("We are connected");
        // Send a request to the server to get the latest prompt
        webSocket.send(JSON.stringify({"Requested": true}));
      });
      
      // Send the custom prompt to the server
      document.querySelector('#sendBtn').addEventListener('click', e => {
        const prompt = document.getElementById('promptInput').value;
        theprompt = prompt;
        sendCustompromptInput();
      });

      // Show the edit screen
      document.getElementById('editBtn').addEventListener('click', e => {
        const copyText = document.getElementById('prompt');
        edit.style.display = 'block';
        current.style.display = 'none';
        document.getElementById('promptInput').value = copyText.innerHTML;
        updateArtSection('artistsEdit');
      });

      // Apply the selected Style/Artist
      document.getElementById('applyBtn').addEventListener('click', e => {
        updateTheArtists();
        selection.style.display = 'none';
        edit.style.display = 'block';
        updateArtSection('artistsEdit');
        enableSendBtn();
      });

      // Close the edit screen
      document.getElementById('close').addEventListener('click', e => {
          edit.style.display = 'none';
          current.style.display = 'block';
          const sendbtn = document.querySelector('#sendBtn');
          if(!sendbtn.classList.contains('disabled')) {
            sendbtn.classList.add('disabled');
          }
      });

      // Show the selection screen
      document.getElementById('selectBtn').addEventListener('click', e => {
        selection.style.display = 'block';
        edit.style.display = 'none';
        renderArtistList(artistData, 'artlist', theArtists);
        renderArtistList(styleData, 'stylelist', theArtists);
        toggleHighlight();
      });

      // Close the selection screen
      document.getElementById('closeSelect').addEventListener('click', e => {
        selection.style.display = 'none';
        edit.style.display = 'block';
      });
      
    function isJson(str) {
      try {
        JSON.parse(str);
      } catch (e) {
        return false;
      }  
      return true;
    }

    // Gather Style and Prompt, and Send them to the server
    function sendCustompromptInput() {
      if(theprompt.length === 0) {
        console.log("No prompt");
        return;
      } else {
        const promptObj = {
          "Type": "Be",
          "Prompt": theprompt,
          "Category": theCate,
          "Music": theMusic[0].Slug,
          "StyleArtist1": theArtists[0].Slug,
          "StyleArtist2": theArtists[1] ? theArtists[1].Slug : null,
          "StyleArtist3": theArtists[2] ? theArtists[2].Slug : null
        };
        webSocket.send(JSON.stringify(promptObj));
        edit.style.display = 'none';
        current.style.display = 'block';
        document.getElementById('prompt').innerHTML = theprompt;
        updateArtSection('artists');
        updateMusicSection('musiccred');
        console.log("Sending", promptObj);
      }
    }

    document.querySelector('#promptInput').addEventListener('input', e => {
      enableSendBtn();
    });

    function enableSendBtn() {
      const sendbtn = document.querySelector('#sendBtn');
      if(sendbtn.classList.contains('disabled')) {
        sendbtn.classList.remove('disabled');
      }
    }

    function updateArt(prm, div) {
      theArtists = [];
      // Check Style/Art of the random prompt
      let arts = [prm.StyleArtist1, prm.StyleArtist2, prm.StyleArtist3];
      let art = arts.filter(function (el) {
        return el != null;
      });
      // Render the Style/Artist in the Style/Artist section
      let theart = artistData.filter(data => {
        return art.includes(data.Slug);
      });
      theArtists.push(...theart);
      let thestyle = styleData.filter(data => {
        return art.includes(data.Slug);
      });
      theArtists.push(...thestyle);
      console.log(theArtists);
    };

    // Render the Style/Artist in the specified Style/Artist section
    function updateArtSection(div) {
      const artists = document.getElementById(div);
      artists.innerHTML = '';
      theArtists.forEach((artist, index) => {
        const artistDiv = document.createElement('div');
        artistDiv.classList.add('artist');
        artistDiv.innerHTML = `
          <img src="images/Misc.jpg" alt="${artist.Name}">
          <div class="artistinfo">
            <p class="Name">${artist.Name}</p>
            <p class="sub">(${artist.SubNote})</p>
            <p class="learnmore">>> Learn More</p>`;
        artists.appendChild(artistDiv);
      });
    }

    function updateMusicEdit(prm) {
      // Check Music of the random prompt
      let music = [prm.Music];
      theMusic = musicData.filter(data => {
        return music.includes(data.Slug);
      });
    }

    function updateMusicSection(div) {
      theMusic.forEach((music, index) => {
        const musics = document.getElementById(div);
        const musicDiv = document.createElement('div');
        musics.innerHTML = '';
        musicDiv.classList.add('music');
        musicDiv.innerHTML = `
          <img src="images/Life.jpg" alt="${music.TrackName}">
          <div class="musicinfo">
            <p class="songtitle">${music.TrackName}</p>
            <p class="byline">by${music.MusicArtist}</p>
            <p class="learnmore">>> Learn More</p>`;
        musics.appendChild(musicDiv);
      });
    }

    function renderArtistList(data, div, arr) {
      const artistList = document.getElementById(div);
      artistList.innerHTML = '';
      // Reorder artistData by matching Slug in theArtists array
      const reorderedArtistData = [...data]; // Make a copy of artistData
      arr.forEach(theArtistItem => {
        const matchIndex = reorderedArtistData.findIndex(artist => artist.Slug === theArtistItem.Slug);
        if (matchIndex > -1) {
          // Move the matched artist to the front
          const [matchedArtist] = reorderedArtistData.splice(matchIndex, 1);
          reorderedArtistData.unshift(matchedArtist);
        }
      });
      // Render the reordered list with a special class for matching artists
      reorderedArtistData.forEach(artist => {
        const artistDiv = document.createElement('div');
        artistDiv.classList.add('artlistItem');
        // Check if the artist matches any in theArtists array to add a special class
        const isMatchingArtist = theArtists.some(theArtistItem => theArtistItem.Slug === artist.Slug);
        if (isMatchingArtist) {
          artistDiv.classList.add('highlighted');
        }
        artistDiv.innerHTML = `
          <img class="artImg" src="images/Misc.jpg" alt="${artist.Name}">
          <p class="artistname">${artist.Name}</p>`;
        artistList.appendChild(artistDiv);
      });
    }

    function toggleHighlight() {
      const artlistItems = document.querySelectorAll('.artlistItem');

      artlistItems.forEach(item => {
        item.addEventListener('click', () => {
          item.classList.toggle('highlighted');
        });
      });
    }

    function updateTheArtists() {
      // Initialize an empty array for highlighted artists
      let highlightedArtists = [];
      // Select all highlighted items
      const highlightedItems = document.querySelectorAll('.artlistItem.highlighted');
      highlightedItems.forEach(item => {
        const artistName = item.querySelector('.artistname').textContent;
        // Find the corresponding artist in the artistData array
        const artist = artistData.find(artist => artist.Name === artistName);
        const styles = styleData.find(styleitem => styleitem.Name === artistName);
        if (artist) {
          highlightedArtists.push(artist);
        }
        if (styles) {
          highlightedArtists.push(styles);
        }
      });
      // Replace the existing theArtists array with the new highlighted artists array
      theArtists = highlightedArtists;
      console.log("Updated Artists", theArtists);
    }
  </script>
</body>
</html>
